#!/usr/bin/env tsx

import { generatePDF } from './src/pdf-generator';
import * as fs from 'fs/promises';
import * as path from 'path';

const testMarkdown = `# Deep Research PDF Test Report

## Executive Summary

This is a test report to validate PDF generation on Replit with Chromium.

## Environment Information

- **Platform**: ${process.platform}
- **Node Version**: ${process.version}
- **Running on Replit**: ${!!(process.env.REPL_ID || process.env.REPLIT)}
- **Test Time**: ${new Date().toISOString()}

## Features Being Tested

### 1. Chromium Integration
Testing if the system can properly detect and use Chromium installed via Nix packages.

### 2. PDF Generation
Verifying that Puppeteer can launch Chromium and generate PDFs successfully.

### 3. Special Characters
Testing Unicode support: € £ ¥ ™ © ® α β γ π ∑ ≤ ≥ ≠

### 4. Code Blocks

\`\`\`javascript
// Example code
async function generateReport() {
  const report = await deepResearch(query);
  return report;
}
\`\`\`

## Conclusion

If you can read this PDF, the system is working correctly!

---
*Generated by Deep Research PDF Generator*
`;

async function testPDFGeneration() {
  console.log('=== Testing PDF Generation ===\n');
  
  const outputPath = path.join(process.cwd(), 'test-report.pdf');
  
  try {
    console.log('Generating PDF...');
    await generatePDF(testMarkdown, outputPath, {
      title: 'Deep Research Test Report'
    });
    
    const stats = await fs.stat(outputPath);
    console.log(`\n✅ Success! PDF generated: ${outputPath}`);
    console.log(`   File size: ${stats.size} bytes`);
    console.log('\nYou can now view test-report.pdf to verify it rendered correctly.');
    
  } catch (error: any) {
    console.error('\n❌ Error generating PDF:', error.message);
    if (error.stack) {
      console.error('\nStack trace:', error.stack);
    }
  }
}

testPDFGeneration().catch(console.error);